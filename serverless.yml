# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-textract # NOTE: update this with your service name

custom:
  bucketName: aurbac-images-${self:provider.stage}
  tableName: docs_table_${self:provider.stage}

provider:
  name: aws
  runtime: python2.7
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
    - Effect: Allow
      Action:
        - textract:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"


functions:
  s3ObjectCreatedFromSQS:
    handler: handler.hello
    timeout: 30
    environment: 
      tableName: ${self:custom.tableName}
      bucketName: ${self:custom.bucketName}
    events:
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt:
              - MyQueue
              - Arn

resources:
  Resources:
    MyQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        VisibilityTimeout: 60
        RedrivePolicy: 
          deadLetterTargetArn: 
            Fn::GetAtt: 
              - "MyDeadLetterQueue"
              - "Arn"
          maxReceiveCount: 5
    MyDeadLetterQueue: 
      Type: AWS::SQS::Queue
    TestDlqPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: MyQueue
        PolicyDocument:
          Id: ServerlessTplLambdaDlQueueId  
          Version: '2012-10-17' 
          Statement:
            - Sid: Allow-Lambda-SendMessage
              Effect: Allow
              Principal:
                 AWS: "*"
              Action:
                - SQS:SendMessage
              Resource: "*"
    MyBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        NotificationConfiguration:
          QueueConfigurations:
          - Queue:
              Fn::GetAtt:
                - MyQueue
                - Arn
            Event: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  - Name: "suffix"
                    Value: ".jpg"
          - Queue:
              Fn::GetAtt:
                - MyQueue
                - Arn
            Event: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  - Name: "suffix"
                    Value: ".png"
    MyDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: key_object
          AttributeType: S
        - AttributeName: bucket_name
          AttributeType: S
        KeySchema:
        - AttributeName: key_object
          KeyType: HASH
        - AttributeName: bucket_name
          KeyType: RANGE
        TableName: ${self:custom.tableName}
        ProvisionedThroughput:
          ReadCapacityUnits: '5'
          WriteCapacityUnits: '5'
          
  Outputs:
    MyQueueArn:
      Description: The ARN for the Queue
      Value:
        "Fn::GetAtt": [MyQueue, Arn ]